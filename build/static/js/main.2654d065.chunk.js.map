{"version":3,"sources":["components/Header.js","components/Noticia.js","components/ListadoNoticias.js","hooks/useSelect.js","components/Formulario.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","Noticia","noticiaProp","urlToImage","url","title","description","source","imagen","src","alt","name","target","rel","ListadoNoticias","noticiasProp","map","noticia","key","useSelect","stateInicial","opciones","useState","state","actualizarState","onChange","e","value","opcion","label","Formulario","guardarCategoriaProp","categoria","SelectNoticias","styles","buscador","onSubmit","preventDefault","heading","type","App","noticias","setNoticias","guardarCategoria","useEffect","a","console","log","fetch","respuesta","json","articles","consultarAPI","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.2654d065.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Header = ({titulo}) => {\r\n    return (\r\n        <nav className=\"nav-container light-blue darken-3\">\r\n            <a href=\"#!\" className=\"brand-logo center\">{titulo}</a>\r\n        </nav>\r\n    )\r\n}\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Noticia = ({noticiaProp}) => {\r\n    \r\n    const {urlToImage, url, title, description, source} = noticiaProp\r\n    const imagen =  (urlToImage) ?\r\n                <div className=\"card-image\">\r\n                    <img src={urlToImage} alt={title}/>\r\n                    <span className=\"card-title\">{source.name}</span>\r\n                </div>\r\n                : null\r\n\r\n\r\n    return (\r\n        <div className=\"col s12 m6 l4\">\r\n          <div className=\"card\">\r\n            {imagen}\r\n            <div className=\"card-content\">\r\n              <h3>{title}</h3>\r\n              <p>{description}</p>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <a \r\n                href={url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn\"\r\n              >\r\n                  Ver Noticia Completa\r\n                </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNoticia.propTypes = {\r\n    noticiaProp: PropTypes.object.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Noticia} from './Noticia'\r\n\r\nexport const ListadoNoticias = ({noticiasProp}) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {noticiasProp.map( (noticia)=>(\r\n                <Noticia \r\n                        key={noticia.url} \r\n                        noticiaProp={noticia}\r\n                />\r\n            )\r\n        )}\r\n            \r\n            \r\n        </div>\r\n  \r\n    )\r\n}\r\n\r\nListadoNoticias.propTypes = {\r\n    noticiasProp: PropTypes.array.isRequired\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nconst useSelect = (stateInicial, opciones) =>{\r\n    const [state, actualizarState] = useState(stateInicial)\r\n\r\n    const SelectNoticias =() =>(\r\n    <select \r\n                className=\"browser-default\"\r\n                onChange={ e => actualizarState(e.target.value)}\r\n                value={state}\r\n    >\r\n        {opciones.map( (opcion)=>(\r\n            <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\r\n        ))}\r\n\r\n        </select>\r\n    )\r\n    return [state, SelectNoticias]\r\n}\r\nexport default useSelect","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n//importar custom hooks\r\nimport useSelect from './../hooks/useSelect'\r\n\r\n//importar estilos para este componenete\r\nimport styles from './Formulario.module.css'\r\n\r\nexport const Formulario = ({guardarCategoriaProp}) => {\r\n    \r\n    const OPCIONES = [\r\n        {value: 'general', label: \"General\"},\r\n        {value: 'business', label: \"Negocios\"},\r\n        {value: 'entertainment', label: \"Entretenimiento\"},\r\n        {value: 'health', label: \"Salud\"},\r\n        {value: 'science', label: \"Ciencia\"},\r\n        {value: 'sports', label: \"Deportes\"},\r\n        {value: 'technology', label: \"Tecnología\"},\r\n    ]\r\n\r\n    const [categoria, SelectNoticias] = useSelect('general', OPCIONES)\r\n\r\n    const buscarNoticias = (e) =>{\r\n        e.preventDefault()\r\n        //busqueda\r\n        guardarCategoriaProp(categoria)\r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <div className={`${styles.buscador} row`}>\r\n            <div className=\"col s12 m8 offset-m2\"></div>\r\n            <form\r\n            onSubmit={buscarNoticias}>\r\n                <h2 className={`${styles.heading}`}>Encuentra Noticias por Categoría</h2>\r\n                <SelectNoticias />\r\n                \r\n                <div className=\"input-field col s12\">\r\n                    <input\r\n                    type=\"submit\"\r\n                    value=\"Buscar\"\r\n                    className={`${styles['btn-block']}btn-large amber darken-2`}></input>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarCategoriaProp: PropTypes.func.isRequired\r\n}\r\n","import React, { useState, useEffect } from 'react';\n\n//0f7b4a0acf40405aaaf2e7c423084a00 mio\n\nimport {Header} from './components/Header'\nimport {ListadoNoticias} from './components/ListadoNoticias'\nimport {Formulario} from './components/Formulario'\n\n\nfunction App() {\n  \n  const [noticias, setNoticias] = useState([])\n  const [categoria, guardarCategoria] = useState('')\n  \n  \n  useEffect( ()=>{\n    const consultarAPI = async ()=>{\n      const url = `https://newsapi.org/v2/top-headlines?country=ar&category=${categoria}&apiKey=0f7b4a0acf40405aaaf2e7c423084a00`\n      console.log(categoria)\n      const respuesta = await fetch(url)\n      const noticias = await respuesta.json()\n      //console.log(noticias.articles)\n\n      setNoticias(noticias.articles)\n\n    }\n    consultarAPI()\n  }, [categoria])\n  \n  return (\n    <>\n      <Header titulo=\"Noticias API\"/>\n      <Formulario guardarCategoriaProp={guardarCategoria}/>\n      <ListadoNoticias noticiasProp={noticias}/>\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__3qL6Y\",\"buscador\":\"Formulario_buscador__AJsoc\",\"btn-block\":\"Formulario_btn-block__1lkUZ\"};"],"sourceRoot":""}